/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.foobar2000.api;

public class abort_callback {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public abort_callback(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(abort_callback obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      throw new UnsupportedOperationException("C++ destructor does not have public access");
    }
    swigCPtr = 0;
  }

  public boolean is_aborting() {
    return foobarJNI.abort_callback_is_aborting(swigCPtr, this);
  }

  public void check() {
    foobarJNI.abort_callback_check(swigCPtr, this);
  }

  public void check_e() {
    foobarJNI.abort_callback_check_e(swigCPtr, this);
  }

  public void sleep(double p_timeout_seconds) {
    foobarJNI.abort_callback_sleep(swigCPtr, this, p_timeout_seconds);
  }

  public boolean sleep_ex(double p_timeout_seconds) {
    return foobarJNI.abort_callback_sleep_ex(swigCPtr, this, p_timeout_seconds);
  }

}
