/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.foobar2000.api;

public class file_info {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public file_info(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(file_info obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      throw new UnsupportedOperationException("C++ destructor does not have public access");
    }
    swigCPtr = 0;
  }

  public double get_length() {
    return foobarJNI.file_info_get_length(swigCPtr, this);
  }

  public void set_length(double p_length) {
    foobarJNI.file_info_set_length(swigCPtr, this, p_length);
  }

  public void set_replaygain(replaygain_info p_info) {
    foobarJNI.file_info_set_replaygain(swigCPtr, this, replaygain_info.getCPtr(p_info), p_info);
  }

  public replaygain_info get_replaygain() {
    return new replaygain_info(foobarJNI.file_info_get_replaygain(swigCPtr, this), true);
  }

  public long meta_get_count() {
    return foobarJNI.file_info_meta_get_count(swigCPtr, this);
  }

  public String meta_enum_name(long p_index) {
    return foobarJNI.file_info_meta_enum_name(swigCPtr, this, p_index);
  }

  public long meta_enum_value_count(long p_index) {
    return foobarJNI.file_info_meta_enum_value_count(swigCPtr, this, p_index);
  }

  public String meta_enum_value(long p_index, long p_value_number) {
    return foobarJNI.file_info_meta_enum_value(swigCPtr, this, p_index, p_value_number);
  }

  public long meta_find_ex(String p_name, long p_name_length) {
    return foobarJNI.file_info_meta_find_ex(swigCPtr, this, p_name, p_name_length);
  }

  public long meta_set_ex(String p_name, long p_name_length, String p_value, long p_value_length) {
    return foobarJNI.file_info_meta_set_ex(swigCPtr, this, p_name, p_name_length, p_value, p_value_length);
  }

  public void meta_insert_value_ex(long p_index, long p_value_index, String p_value, long p_value_length) {
    foobarJNI.file_info_meta_insert_value_ex(swigCPtr, this, p_index, p_value_index, p_value, p_value_length);
  }

  public void meta_remove_mask(bit_array p_mask) {
    foobarJNI.file_info_meta_remove_mask(swigCPtr, this, bit_array.getCPtr(p_mask), p_mask);
  }

  public void meta_reorder(SWIGTYPE_p_unsigned_int p_order) {
    foobarJNI.file_info_meta_reorder(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(p_order));
  }

  public void meta_remove_values(long p_index, bit_array p_mask) {
    foobarJNI.file_info_meta_remove_values(swigCPtr, this, p_index, bit_array.getCPtr(p_mask), p_mask);
  }

  public void meta_modify_value_ex(long p_index, long p_value_index, String p_value, long p_value_length) {
    foobarJNI.file_info_meta_modify_value_ex(swigCPtr, this, p_index, p_value_index, p_value, p_value_length);
  }

  public long info_get_count() {
    return foobarJNI.file_info_info_get_count(swigCPtr, this);
  }

  public String info_enum_name(long p_index) {
    return foobarJNI.file_info_info_enum_name(swigCPtr, this, p_index);
  }

  public String info_enum_value(long p_index) {
    return foobarJNI.file_info_info_enum_value(swigCPtr, this, p_index);
  }

  public long info_set_ex(String p_name, long p_name_length, String p_value, long p_value_length) {
    return foobarJNI.file_info_info_set_ex(swigCPtr, this, p_name, p_name_length, p_value, p_value_length);
  }

  public void info_remove_mask(bit_array p_mask) {
    foobarJNI.file_info_info_remove_mask(swigCPtr, this, bit_array.getCPtr(p_mask), p_mask);
  }

  public long info_find_ex(String p_name, long p_name_length) {
    return foobarJNI.file_info_info_find_ex(swigCPtr, this, p_name, p_name_length);
  }

  public void copy(file_info p_source) {
    foobarJNI.file_info_copy(swigCPtr, this, file_info.getCPtr(p_source), p_source);
  }

  public void copy_meta(file_info p_source) {
    foobarJNI.file_info_copy_meta(swigCPtr, this, file_info.getCPtr(p_source), p_source);
  }

  public void copy_info(file_info p_source) {
    foobarJNI.file_info_copy_info(swigCPtr, this, file_info.getCPtr(p_source), p_source);
  }

  public boolean meta_exists_ex(String p_name, long p_name_length) {
    return foobarJNI.file_info_meta_exists_ex(swigCPtr, this, p_name, p_name_length);
  }

  public void meta_remove_field_ex(String p_name, long p_name_length) {
    foobarJNI.file_info_meta_remove_field_ex(swigCPtr, this, p_name, p_name_length);
  }

  public void meta_remove_index(long p_index) {
    foobarJNI.file_info_meta_remove_index(swigCPtr, this, p_index);
  }

  public void meta_remove_all() {
    foobarJNI.file_info_meta_remove_all(swigCPtr, this);
  }

  public void meta_remove_value(long p_index, long p_value) {
    foobarJNI.file_info_meta_remove_value(swigCPtr, this, p_index, p_value);
  }

  public String meta_get_ex(String p_name, long p_name_length, long p_index) {
    return foobarJNI.file_info_meta_get_ex(swigCPtr, this, p_name, p_name_length, p_index);
  }

  public long meta_get_count_by_name_ex(String p_name, long p_name_length) {
    return foobarJNI.file_info_meta_get_count_by_name_ex(swigCPtr, this, p_name, p_name_length);
  }

  public void meta_add_value_ex(long p_index, String p_value, long p_value_length) {
    foobarJNI.file_info_meta_add_value_ex(swigCPtr, this, p_index, p_value, p_value_length);
  }

  public long meta_add_ex(String p_name, long p_name_length, String p_value, long p_value_length) {
    return foobarJNI.file_info_meta_add_ex(swigCPtr, this, p_name, p_name_length, p_value, p_value_length);
  }

  public long meta_calc_total_value_count() {
    return foobarJNI.file_info_meta_calc_total_value_count(swigCPtr, this);
  }

  public boolean meta_format(String p_name, PfcString p_out) {
    return foobarJNI.file_info_meta_format(swigCPtr, this, p_name, p_out);
  }

  public boolean info_exists_ex(String p_name, long p_name_length) {
    return foobarJNI.file_info_info_exists_ex(swigCPtr, this, p_name, p_name_length);
  }

  public void info_remove_index(long p_index) {
    foobarJNI.file_info_info_remove_index(swigCPtr, this, p_index);
  }

  public void info_remove_all() {
    foobarJNI.file_info_info_remove_all(swigCPtr, this);
  }

  public boolean info_remove_ex(String p_name, long p_name_length) {
    return foobarJNI.file_info_info_remove_ex(swigCPtr, this, p_name, p_name_length);
  }

  public String info_get_ex(String p_name, long p_name_length) {
    return foobarJNI.file_info_info_get_ex(swigCPtr, this, p_name, p_name_length);
  }

  public long meta_find(String p_name) {
    return foobarJNI.file_info_meta_find(swigCPtr, this, p_name);
  }

  public boolean meta_exists(String p_name) {
    return foobarJNI.file_info_meta_exists(swigCPtr, this, p_name);
  }

  public void meta_remove_field(String p_name) {
    foobarJNI.file_info_meta_remove_field(swigCPtr, this, p_name);
  }

  public long meta_set(String p_name, String p_value) {
    return foobarJNI.file_info_meta_set(swigCPtr, this, p_name, p_value);
  }

  public void meta_insert_value(long p_index, long p_value_index, String p_value) {
    foobarJNI.file_info_meta_insert_value(swigCPtr, this, p_index, p_value_index, p_value);
  }

  public void meta_add_value(long p_index, String p_value) {
    foobarJNI.file_info_meta_add_value(swigCPtr, this, p_index, p_value);
  }

  public String meta_get(String p_name, long p_index) {
    return foobarJNI.file_info_meta_get(swigCPtr, this, p_name, p_index);
  }

  public long meta_get_count_by_name(String p_name) {
    return foobarJNI.file_info_meta_get_count_by_name(swigCPtr, this, p_name);
  }

  public long meta_add(String p_name, String p_value) {
    return foobarJNI.file_info_meta_add(swigCPtr, this, p_name, p_value);
  }

  public void meta_modify_value(long p_index, long p_value_index, String p_value) {
    foobarJNI.file_info_meta_modify_value(swigCPtr, this, p_index, p_value_index, p_value);
  }

  public long info_set(String p_name, String p_value) {
    return foobarJNI.file_info_info_set(swigCPtr, this, p_name, p_value);
  }

  public long info_find(String p_name) {
    return foobarJNI.file_info_info_find(swigCPtr, this, p_name);
  }

  public long info_exists(String p_name) {
    return foobarJNI.file_info_info_exists(swigCPtr, this, p_name);
  }

  public boolean info_remove(String p_name) {
    return foobarJNI.file_info_info_remove(swigCPtr, this, p_name);
  }

  public String info_get(String p_name) {
    return foobarJNI.file_info_info_get(swigCPtr, this, p_name);
  }

  public boolean info_set_replaygain_ex(String p_name, long p_name_len, String p_value, long p_value_len) {
    return foobarJNI.file_info_info_set_replaygain_ex(swigCPtr, this, p_name, p_name_len, p_value, p_value_len);
  }

  public boolean info_set_replaygain(String p_name, String p_value) {
    return foobarJNI.file_info_info_set_replaygain(swigCPtr, this, p_name, p_value);
  }

  public void info_set_replaygain_auto_ex(String p_name, long p_name_len, String p_value, long p_value_len) {
    foobarJNI.file_info_info_set_replaygain_auto_ex(swigCPtr, this, p_name, p_name_len, p_value, p_value_len);
  }

  public void info_set_replaygain_auto(String p_name, String p_value) {
    foobarJNI.file_info_info_set_replaygain_auto(swigCPtr, this, p_name, p_value);
  }

  public void copy_meta_single(file_info p_source, long p_index) {
    foobarJNI.file_info_copy_meta_single(swigCPtr, this, file_info.getCPtr(p_source), p_source, p_index);
  }

  public void copy_info_single(file_info p_source, long p_index) {
    foobarJNI.file_info_copy_info_single(swigCPtr, this, file_info.getCPtr(p_source), p_source, p_index);
  }

  public void copy_meta_single_by_name_ex(file_info p_source, String p_name, long p_name_length) {
    foobarJNI.file_info_copy_meta_single_by_name_ex(swigCPtr, this, file_info.getCPtr(p_source), p_source, p_name, p_name_length);
  }

  public void copy_info_single_by_name_ex(file_info p_source, String p_name, long p_name_length) {
    foobarJNI.file_info_copy_info_single_by_name_ex(swigCPtr, this, file_info.getCPtr(p_source), p_source, p_name, p_name_length);
  }

  public void copy_meta_single_by_name(file_info p_source, String p_name) {
    foobarJNI.file_info_copy_meta_single_by_name(swigCPtr, this, file_info.getCPtr(p_source), p_source, p_name);
  }

  public void copy_info_single_by_name(file_info p_source, String p_name) {
    foobarJNI.file_info_copy_info_single_by_name(swigCPtr, this, file_info.getCPtr(p_source), p_source, p_name);
  }

  public void reset() {
    foobarJNI.file_info_reset(swigCPtr, this);
  }

  public void reset_replaygain() {
    foobarJNI.file_info_reset_replaygain(swigCPtr, this);
  }

  public void copy_meta_single_rename_ex(file_info p_source, long p_index, String p_new_name, long p_new_name_length) {
    foobarJNI.file_info_copy_meta_single_rename_ex(swigCPtr, this, file_info.getCPtr(p_source), p_source, p_index, p_new_name, p_new_name_length);
  }

  public void copy_meta_single_rename(file_info p_source, long p_index, String p_new_name) {
    foobarJNI.file_info_copy_meta_single_rename(swigCPtr, this, file_info.getCPtr(p_source), p_source, p_index, p_new_name);
  }

  public void overwrite_info(file_info p_source) {
    foobarJNI.file_info_overwrite_info(swigCPtr, this, file_info.getCPtr(p_source), p_source);
  }

  public long info_get_int(String name) {
    return foobarJNI.file_info_info_get_int(swigCPtr, this, name);
  }

  public long info_get_length_samples() {
    return foobarJNI.file_info_info_get_length_samples(swigCPtr, this);
  }

  public double info_get_float(String name) {
    return foobarJNI.file_info_info_get_float(swigCPtr, this, name);
  }

  public void info_set_int(String name, long value) {
    foobarJNI.file_info_info_set_int(swigCPtr, this, name, value);
  }

  public void info_set_float(String name, double value, long precision, boolean force_sign, String unit) {
    foobarJNI.file_info_info_set_float__SWIG_0(swigCPtr, this, name, value, precision, force_sign, unit);
  }

  public void info_set_float(String name, double value, long precision, boolean force_sign) {
    foobarJNI.file_info_info_set_float__SWIG_1(swigCPtr, this, name, value, precision, force_sign);
  }

  public void info_set_float(String name, double value, long precision) {
    foobarJNI.file_info_info_set_float__SWIG_2(swigCPtr, this, name, value, precision);
  }

  public void info_set_replaygain_track_gain(float value) {
    foobarJNI.file_info_info_set_replaygain_track_gain(swigCPtr, this, value);
  }

  public void info_set_replaygain_album_gain(float value) {
    foobarJNI.file_info_info_set_replaygain_album_gain(swigCPtr, this, value);
  }

  public void info_set_replaygain_track_peak(float value) {
    foobarJNI.file_info_info_set_replaygain_track_peak(swigCPtr, this, value);
  }

  public void info_set_replaygain_album_peak(float value) {
    foobarJNI.file_info_info_set_replaygain_album_peak(swigCPtr, this, value);
  }

  public long info_get_bitrate_vbr() {
    return foobarJNI.file_info_info_get_bitrate_vbr(swigCPtr, this);
  }

  public void info_set_bitrate_vbr(long val) {
    foobarJNI.file_info_info_set_bitrate_vbr(swigCPtr, this, val);
  }

  public long info_get_bitrate() {
    return foobarJNI.file_info_info_get_bitrate(swigCPtr, this);
  }

  public void info_set_bitrate(long val) {
    foobarJNI.file_info_info_set_bitrate(swigCPtr, this, val);
  }

  public boolean is_encoding_lossy() {
    return foobarJNI.file_info_is_encoding_lossy(swigCPtr, this);
  }

  public void info_calculate_bitrate(java.math.BigInteger p_filesize, double p_length) {
    foobarJNI.file_info_info_calculate_bitrate(swigCPtr, this, p_filesize, p_length);
  }

  public long info_get_decoded_bps() {
    return foobarJNI.file_info_info_get_decoded_bps(swigCPtr, this);
  }

  public void merge(java.util.Vector<file_info> p_sources) {
    foobarJNI.file_info_merge(swigCPtr, this, p_sources);
  }

  public boolean are_meta_fields_identical(long p_index1, long p_index2) {
    return foobarJNI.file_info_are_meta_fields_identical(swigCPtr, this, p_index1, p_index2);
  }

  public static boolean g_is_meta_equal(file_info p_item1, file_info p_item2) {
    return foobarJNI.file_info_g_is_meta_equal(file_info.getCPtr(p_item1), p_item1, file_info.getCPtr(p_item2), p_item2);
  }

  public static boolean g_is_info_equal(file_info p_item1, file_info p_item2) {
    return foobarJNI.file_info_g_is_info_equal(file_info.getCPtr(p_item1), p_item1, file_info.getCPtr(p_item2), p_item2);
  }

}
