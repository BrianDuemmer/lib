/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.foobar2000.api;

public class file_info_impl extends file_info {
  private long swigCPtr;

  public file_info_impl(long cPtr, boolean cMemoryOwn) {
    super(foobarJNI.SWIGfile_info_implUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(file_info_impl obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      foobarJNI.delete_file_info_impl(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public file_info_impl(file_info_impl p_source) {
    this(foobarJNI.new_file_info_impl__SWIG_0(file_info_impl.getCPtr(p_source), p_source), true);
  }

  public file_info_impl(file_info p_source) {
    this(foobarJNI.new_file_info_impl__SWIG_1(file_info.getCPtr(p_source), p_source), true);
  }

  public file_info_impl() {
    this(foobarJNI.new_file_info_impl__SWIG_2(), true);
  }

  public double get_length() {
    return foobarJNI.file_info_impl_get_length(swigCPtr, this);
  }

  public void set_length(double p_length) {
    foobarJNI.file_info_impl_set_length(swigCPtr, this, p_length);
  }

  public void copy_meta(file_info p_source) {
    foobarJNI.file_info_impl_copy_meta(swigCPtr, this, file_info.getCPtr(p_source), p_source);
  }

  public void copy_info(file_info p_source) {
    foobarJNI.file_info_impl_copy_info(swigCPtr, this, file_info.getCPtr(p_source), p_source);
  }

  public long meta_get_count() {
    return foobarJNI.file_info_impl_meta_get_count(swigCPtr, this);
  }

  public String meta_enum_name(long p_index) {
    return foobarJNI.file_info_impl_meta_enum_name(swigCPtr, this, p_index);
  }

  public long meta_enum_value_count(long p_index) {
    return foobarJNI.file_info_impl_meta_enum_value_count(swigCPtr, this, p_index);
  }

  public String meta_enum_value(long p_index, long p_value_number) {
    return foobarJNI.file_info_impl_meta_enum_value(swigCPtr, this, p_index, p_value_number);
  }

  public long meta_set_ex(String p_name, long p_name_length, String p_value, long p_value_length) {
    return foobarJNI.file_info_impl_meta_set_ex(swigCPtr, this, p_name, p_name_length, p_value, p_value_length);
  }

  public void meta_insert_value_ex(long p_index, long p_value_index, String p_value, long p_value_length) {
    foobarJNI.file_info_impl_meta_insert_value_ex(swigCPtr, this, p_index, p_value_index, p_value, p_value_length);
  }

  public void meta_remove_mask(bit_array p_mask) {
    foobarJNI.file_info_impl_meta_remove_mask(swigCPtr, this, bit_array.getCPtr(p_mask), p_mask);
  }

  public void meta_reorder(SWIGTYPE_p_unsigned_int p_order) {
    foobarJNI.file_info_impl_meta_reorder(swigCPtr, this, SWIGTYPE_p_unsigned_int.getCPtr(p_order));
  }

  public void meta_remove_values(long p_index, bit_array p_mask) {
    foobarJNI.file_info_impl_meta_remove_values(swigCPtr, this, p_index, bit_array.getCPtr(p_mask), p_mask);
  }

  public void meta_modify_value_ex(long p_index, long p_value_index, String p_value, long p_value_length) {
    foobarJNI.file_info_impl_meta_modify_value_ex(swigCPtr, this, p_index, p_value_index, p_value, p_value_length);
  }

  public long info_get_count() {
    return foobarJNI.file_info_impl_info_get_count(swigCPtr, this);
  }

  public String info_enum_name(long p_index) {
    return foobarJNI.file_info_impl_info_enum_name(swigCPtr, this, p_index);
  }

  public String info_enum_value(long p_index) {
    return foobarJNI.file_info_impl_info_enum_value(swigCPtr, this, p_index);
  }

  public long info_set_ex(String p_name, long p_name_length, String p_value, long p_value_length) {
    return foobarJNI.file_info_impl_info_set_ex(swigCPtr, this, p_name, p_name_length, p_value, p_value_length);
  }

  public void info_remove_mask(bit_array p_mask) {
    foobarJNI.file_info_impl_info_remove_mask(swigCPtr, this, bit_array.getCPtr(p_mask), p_mask);
  }

  public replaygain_info get_replaygain() {
    return new replaygain_info(foobarJNI.file_info_impl_get_replaygain(swigCPtr, this), true);
  }

  public void set_replaygain(replaygain_info p_info) {
    foobarJNI.file_info_impl_set_replaygain(swigCPtr, this, replaygain_info.getCPtr(p_info), p_info);
  }

}
