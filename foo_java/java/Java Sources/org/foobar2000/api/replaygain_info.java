/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.foobar2000.api;

public class replaygain_info {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public replaygain_info(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(replaygain_info obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      foobarJNI.delete_replaygain_info(swigCPtr);
    }
    swigCPtr = 0;
  }

  public void setM_album_gain(float value) {
    foobarJNI.replaygain_info_m_album_gain_set(swigCPtr, this, value);
  }

  public float getM_album_gain() {
    return foobarJNI.replaygain_info_m_album_gain_get(swigCPtr, this);
  }

  public void setM_track_gain(float value) {
    foobarJNI.replaygain_info_m_track_gain_set(swigCPtr, this, value);
  }

  public float getM_track_gain() {
    return foobarJNI.replaygain_info_m_track_gain_get(swigCPtr, this);
  }

  public void setM_album_peak(float value) {
    foobarJNI.replaygain_info_m_album_peak_set(swigCPtr, this, value);
  }

  public float getM_album_peak() {
    return foobarJNI.replaygain_info_m_album_peak_get(swigCPtr, this);
  }

  public void setM_track_peak(float value) {
    foobarJNI.replaygain_info_m_track_peak_set(swigCPtr, this, value);
  }

  public float getM_track_peak() {
    return foobarJNI.replaygain_info_m_track_peak_get(swigCPtr, this);
  }

  public static boolean g_format_gain(float p_value, String p_buffer) {
    return foobarJNI.replaygain_info_g_format_gain(p_value, p_buffer);
  }

  public static boolean g_format_peak(float p_value, String p_buffer) {
    return foobarJNI.replaygain_info_g_format_peak(p_value, p_buffer);
  }

  public boolean format_album_gain(String p_buffer) {
    return foobarJNI.replaygain_info_format_album_gain(swigCPtr, this, p_buffer);
  }

  public boolean format_track_gain(String p_buffer) {
    return foobarJNI.replaygain_info_format_track_gain(swigCPtr, this, p_buffer);
  }

  public boolean format_album_peak(String p_buffer) {
    return foobarJNI.replaygain_info_format_album_peak(swigCPtr, this, p_buffer);
  }

  public boolean format_track_peak(String p_buffer) {
    return foobarJNI.replaygain_info_format_track_peak(swigCPtr, this, p_buffer);
  }

  public void set_album_gain_text(String p_text, long p_text_len) {
    foobarJNI.replaygain_info_set_album_gain_text__SWIG_0(swigCPtr, this, p_text, p_text_len);
  }

  public void set_album_gain_text(String p_text) {
    foobarJNI.replaygain_info_set_album_gain_text__SWIG_1(swigCPtr, this, p_text);
  }

  public void set_track_gain_text(String p_text, long p_text_len) {
    foobarJNI.replaygain_info_set_track_gain_text__SWIG_0(swigCPtr, this, p_text, p_text_len);
  }

  public void set_track_gain_text(String p_text) {
    foobarJNI.replaygain_info_set_track_gain_text__SWIG_1(swigCPtr, this, p_text);
  }

  public void set_album_peak_text(String p_text, long p_text_len) {
    foobarJNI.replaygain_info_set_album_peak_text__SWIG_0(swigCPtr, this, p_text, p_text_len);
  }

  public void set_album_peak_text(String p_text) {
    foobarJNI.replaygain_info_set_album_peak_text__SWIG_1(swigCPtr, this, p_text);
  }

  public void set_track_peak_text(String p_text, long p_text_len) {
    foobarJNI.replaygain_info_set_track_peak_text__SWIG_0(swigCPtr, this, p_text, p_text_len);
  }

  public void set_track_peak_text(String p_text) {
    foobarJNI.replaygain_info_set_track_peak_text__SWIG_1(swigCPtr, this, p_text);
  }

  public static boolean g_is_meta_replaygain(String p_name, long p_name_len) {
    return foobarJNI.replaygain_info_g_is_meta_replaygain__SWIG_0(p_name, p_name_len);
  }

  public static boolean g_is_meta_replaygain(String p_name) {
    return foobarJNI.replaygain_info_g_is_meta_replaygain__SWIG_1(p_name);
  }

  public boolean set_from_meta_ex(String p_name, long p_name_len, String p_value, long p_value_len) {
    return foobarJNI.replaygain_info_set_from_meta_ex(swigCPtr, this, p_name, p_name_len, p_value, p_value_len);
  }

  public boolean set_from_meta(String p_name, String p_value) {
    return foobarJNI.replaygain_info_set_from_meta(swigCPtr, this, p_name, p_value);
  }

  public boolean is_album_gain_present() {
    return foobarJNI.replaygain_info_is_album_gain_present(swigCPtr, this);
  }

  public boolean is_track_gain_present() {
    return foobarJNI.replaygain_info_is_track_gain_present(swigCPtr, this);
  }

  public boolean is_album_peak_present() {
    return foobarJNI.replaygain_info_is_album_peak_present(swigCPtr, this);
  }

  public boolean is_track_peak_present() {
    return foobarJNI.replaygain_info_is_track_peak_present(swigCPtr, this);
  }

  public void remove_album_gain() {
    foobarJNI.replaygain_info_remove_album_gain(swigCPtr, this);
  }

  public void remove_track_gain() {
    foobarJNI.replaygain_info_remove_track_gain(swigCPtr, this);
  }

  public void remove_album_peak() {
    foobarJNI.replaygain_info_remove_album_peak(swigCPtr, this);
  }

  public void remove_track_peak() {
    foobarJNI.replaygain_info_remove_track_peak(swigCPtr, this);
  }

  public long get_value_count() {
    return foobarJNI.replaygain_info_get_value_count(swigCPtr, this);
  }

  public static replaygain_info g_merge(replaygain_info r1, replaygain_info r2) {
    return new replaygain_info(foobarJNI.replaygain_info_g_merge(replaygain_info.getCPtr(r1), r1, replaygain_info.getCPtr(r2), r2), true);
  }

  public static boolean g_equal(replaygain_info item1, replaygain_info item2) {
    return foobarJNI.replaygain_info_g_equal(replaygain_info.getCPtr(item1), item1, replaygain_info.getCPtr(item2), item2);
  }

  public void reset() {
    foobarJNI.replaygain_info_reset(swigCPtr, this);
  }

  public replaygain_info() {
    this(foobarJNI.new_replaygain_info(), true);
  }

  public final static int text_buffer_size = foobarJNI.replaygain_info_text_buffer_size_get();

  public final static int peak_invalid = foobarJNI.replaygain_info_peak_invalid_get();
  public final static int gain_invalid = foobarJNI.replaygain_info_gain_invalid_get();

}
